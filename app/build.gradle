apply plugin: 'com.android.application'

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.1"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}



android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.nyt.articles"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$versions.support"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraint_layout"

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


    testImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    implementation "com.android.support:recyclerview-v7:$versions.support"
    implementation "com.android.support:cardview-v7:$versions.support"
    implementation "com.android.support:design:$versions.support"

    //Retrofit

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

    // rxandroid
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"


    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'


    //Dagger
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"

    //Arch-Componenets

    implementation "android.arch.lifecycle:extensions:$versions.arch_comp"
    implementation "android.arch.lifecycle:runtime:$versions.arch_comp"
    implementation "android.arch.lifecycle:common-java8:$versions.arch_comp"


}
